app:
  namespace: app
  name: flask
  port: 5000

  env:
    name: postgres
    user: postgres
    port: "5432"
    host: db-service.db.svc.cluster.local
    password: postgres
  
  replicaCount: 1
  
  strategy:
    type: RollingUpdate
  
  image: mgokayozturk/flask-postgres-app:1.0.3

  livenessProbe:
    path: /health
    port: 5000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 2
  readinessProbe:
    path: /health
    port: 5000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 2
  startupProbe:
    path: /health
    port: 5000
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
    failureThreshold: 9
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

  service:
    type: NodePort
    port: 5000
    targetPort: 5000
    nodePort: 30031
    
db:
  namespace: db
  name: postgres
  port: 5432
  env: 
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  service:
    type: ClusterIP
    port: 5432
    targetPort: 5432
  pvc:
    accessModes: ReadWriteOnce
    resources:
      requests: 
        storage: 1Gi
  replicaCount: 1
  image: 
    repository: postgres
    tag: 9.6
  resources:
    requests:
      memory: 64Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  readinessProbe:
    initialDelaySeconds: 15
    periodSeconds: 10
  livenessProbe:
    initialDelaySeconds: 15
    periodSeconds: 10



pv:
  name: db-pv
  capacity:
    storage: 1Gi
  accessModes: ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /tmp/data



global:
  networkPolicy:
    create: false
