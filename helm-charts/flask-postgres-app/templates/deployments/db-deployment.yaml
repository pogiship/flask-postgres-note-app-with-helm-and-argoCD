apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.db.namespace }}
  name: {{ .Values.db.name }}-deployment
  labels:
    db: {{ .Values.db.name }}

spec:

  selector:
    matchLabels:
      db: {{ .Values.db.name }}

  replicas: {{ .Values.db.replicaCount}}

  template:
    metadata:
      labels:
        db: {{ .Values.db.name }}
        
    spec:
      containers:
        - name: {{ .Values.db.name }}-container
          image: {{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}
          
          # Constraints
          resources:
            requests:
              memory: "{{ .Values.db.resources.requests.memory }}"
              cpu: "{{ .Values.db.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.db.resources.limits.memory }}"
              cpu: "{{ .Values.db.resources.limits.cpu }}"
          
          # ENVIRONMENT VARIABLES
          envFrom:
          - configMapRef:
              name: {{ .Values.db.name }}-configmap
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.name }}-secret
                  key: POSTGRES_PASSWORD

          volumeMounts:
            - name: {{ .Values.db.name }}-storage
              mountPath: /var/lib/postgresql/data
              # not sure about this part
          ports:
            - containerPort: {{ .Values.db.port }}
          # Liveness and Readiness Probes
          readinessProbe:
            tcpSocket:
              port: {{ .Values.db.port }}
            initialDelaySeconds: {{ .Values.db.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.db.readinessProbe.periodSeconds }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.db.port }}
            initialDelaySeconds: {{ .Values.db.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.db.livenessProbe.periodSeconds }}

      volumes:
        - name: {{ .Values.db.name}}-storage
          persistentVolumeClaim:
            claimName: {{ .Values.db.name }}-pvc